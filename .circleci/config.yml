version: 2
jobs:
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: Setup docker
          command: |
            cp .env.testing .env
            docker-compose build
            docker-compose up -d
            docker-compose run app sudo composer install
      - run:
          name: Setup NodeJS and Yarn
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            source $BASH_ENV

            # Install NodeJS
            nvm install v12.16.1
            nvm alias default v12.16.1

            # Install Yarn
            npm install -g yarn@1.22.0

            # Install node_modules
            yarn install
      - run:
          name: Setup Laravel
          command: |
            cp .env.testing .env
            docker-compose run app sudo php artisan key:generate
            docker-compose run app sudo php artisan migrate:refresh --seed
      - run:
          name: Setup Nuxt.js
          command: |
            yarn run build
      - run:
          name: Run Laravel Test
          command: |
            docker-compose run app sudo vendor/bin/phpunit
      - run:
          name: Run Nuxt.js Test
          command: |
            yarn run test

  deploy-prod:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: heroku maintenance on
          command: |
            heroku maintenance:on --app ${HEROKU_APP_NAME_PROD}
      - run:
          name: heroku deploy
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_PROD.git master
      - run:
          name: heroku maintenance off
          command: |
            heroku maintenance:off --app ${HEROKU_APP_NAME_PROD}
          
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy-prod:
          requires:
          - build
          filters:
            branches:
              only: master
